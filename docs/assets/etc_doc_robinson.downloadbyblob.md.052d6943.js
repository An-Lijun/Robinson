import{_ as o,o as s,c as a,Q as n}from"./chunks/framework.a7175731.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"etc/doc/robinson.downloadbyblob.md","filePath":"etc/doc/robinson.downloadbyblob.md"}'),t={name:"etc/doc/robinson.downloadbyblob.md"},l=n('<p><a href="./">Home</a> &gt; <a href="./robinson.html">robinson</a> &gt; <a href="./robinson.downloadbyblob.html">downloadByBlob</a></p><h2 id="downloadbyblob-function" tabindex="-1">downloadByBlob() function <a class="header-anchor" href="#downloadbyblob-function" aria-label="Permalink to &quot;downloadByBlob() function&quot;">​</a></h2><p>blob流下载文件</p><p><strong>Signature:</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">declare</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">downloadByBlob</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">blob</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BlobPart</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">fileNm</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">mime</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">void</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki light-plus vp-code-light"><code><span class="line"><span style="color:#0000FF;">declare</span><span style="color:#000000;"> </span><span style="color:#0000FF;">function</span><span style="color:#000000;"> </span><span style="color:#795E26;">downloadByBlob</span><span style="color:#000000;">(</span><span style="color:#001080;">blob</span><span style="color:#000000;">: </span><span style="color:#267F99;">BlobPart</span><span style="color:#000000;">, </span><span style="color:#001080;">fileNm</span><span style="color:#000000;">: </span><span style="color:#267F99;">string</span><span style="color:#000000;">, </span><span style="color:#001080;">mime</span><span style="color:#000000;">?: </span><span style="color:#267F99;">string</span><span style="color:#000000;">): </span><span style="color:#267F99;">void</span><span style="color:#000000;">;</span></span></code></pre></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>blob</td><td>BlobPart</td><td>blob文件流</td></tr><tr><td>fileNm</td><td>string</td><td>下载后的文件名</td></tr><tr><td>mime</td><td>string</td><td><em>(Optional)</em> 下载后的文件类型</td></tr></tbody></table><p><strong>Returns:</strong></p><p>void</p>',9),e=[l];function p(r,c,d,i,y,b){return s(),a("div",null,e)}const m=o(t,[["render",p]]);export{h as __pageData,m as default};
