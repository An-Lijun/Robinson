import{_ as a,o as l,c as r,k as e,a as t}from"./chunks/framework.a333c6fb.js";const m=JSON.parse('{"title":"treeshaking","description":"","frontmatter":{},"headers":[],"relativePath":"etc/rollup/src/treeshaking.md","filePath":"etc/rollup/src/treeshaking.md","lastUpdated":1738049586000}'),n={name:"etc/rollup/src/treeshaking.md"},s=e("h1",{id:"treeshaking",tabindex:"-1"},[t("treeshaking "),e("a",{class:"header-anchor",href:"#treeshaking","aria-label":'Permalink to "treeshaking"'},"​")],-1),o=e("ul",null,[e("li",null,[e("strong",null,"动态导入"),t("：Rollup 的 Tree Shaking 主要针对静态导入和导出。对于动态导入（如 "),e("code",null,"import()"),t("），Rollup 无法在打包时确定哪些代码会被使用，因此 Tree Shaking 的效果可能会受到影响。")]),e("li",null,[e("strong",null,"副作用代码"),t("：如果代码中包含副作用（如修改全局变量、执行某些操作等），Rollup 可能会保留这些代码，即使它们看起来没有被使用。开发者可以通过 "),e("code",null,"/*#__PURE__*/"),t(" 注释来标记没有副作用的代码，帮助 Rollup 更好地进行 Tree Shaking。 Rollup 的 Tree Shaking 依赖于 ES6 模块的静态结构。ES6 模块的导入和导出语句是静态的，这意味着它们在代码执行之前就已经确定了。Rollup 利用这一点，通过解析这些静态语句来构建模块之间的依赖关系图去清除未使用过的代码。")])],-1),i=[s,o];function c(h,d,p,u,_,k){return l(),r("div",null,i)}const f=a(n,[["render",c]]);export{m as __pageData,f as default};
