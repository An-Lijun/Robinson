import{_ as s,o as n,c as a,Q as e}from"./chunks/framework.a7175731.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"etc/doc/robinson.getfilechunk.md","filePath":"etc/doc/robinson.getfilechunk.md"}'),l={name:"etc/doc/robinson.getfilechunk.md"},o=e(`<p><a href="./">Home</a> &gt; <a href="./robinson.html">robinson</a> &gt; <a href="./robinson.getfilechunk.html">getFileChunk</a></p><h2 id="getfilechunk-function" tabindex="-1">getFileChunk() function <a class="header-anchor" href="#getfilechunk-function" aria-label="Permalink to &quot;getFileChunk() function&quot;">​</a></h2><p>生成切片数组</p><p><strong>Signature:</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">declare</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getFileChunk</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">file</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">File</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">chunkSize</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">number</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Array</span><span style="color:#E1E4E8;">&lt;{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">index</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Number</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">file</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Blob</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}&gt;;</span></span></code></pre><pre class="shiki light-plus vp-code-light"><code><span class="line"><span style="color:#0000FF;">declare</span><span style="color:#000000;"> </span><span style="color:#0000FF;">function</span><span style="color:#000000;"> </span><span style="color:#795E26;">getFileChunk</span><span style="color:#000000;">(</span><span style="color:#001080;">file</span><span style="color:#000000;">: </span><span style="color:#267F99;">File</span><span style="color:#000000;">, </span><span style="color:#001080;">chunkSize</span><span style="color:#000000;">?: </span><span style="color:#267F99;">number</span><span style="color:#000000;">): </span><span style="color:#267F99;">Array</span><span style="color:#000000;">&lt;{</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#001080;">index</span><span style="color:#000000;">: </span><span style="color:#267F99;">Number</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#001080;">file</span><span style="color:#000000;">: </span><span style="color:#267F99;">Blob</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">}&gt;;</span></span></code></pre></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>file</td><td>File</td><td></td></tr><tr><td>chunkSize</td><td>number</td><td><em>(Optional)</em></td></tr></tbody></table><p><strong>Returns:</strong></p><p>Array&lt;{ index: Number; file: Blob; }&gt;</p><p>{ Array&lt;{ index: Number, file: Blob }&gt;}</p>`,10),t=[o];function p(r,c,i,y,d,E){return n(),a("div",null,t)}const F=s(l,[["render",p]]);export{u as __pageData,F as default};
