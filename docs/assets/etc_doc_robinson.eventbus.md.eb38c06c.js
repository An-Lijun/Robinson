import{_ as t,o as e,c as s,Q as a}from"./chunks/framework.80c893c1.js";const v=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"etc/doc/robinson.eventbus.md","filePath":"etc/doc/robinson.eventbus.md"}'),o={name:"etc/doc/robinson.eventbus.md"},n=a('<p><a href="./">Home</a> &gt; <a href="./robinson.html">robinson</a> &gt; <a href="./robinson.eventbus.html">eventBus</a></p><h2 id="eventbus-class" tabindex="-1">eventBus class <a class="header-anchor" href="#eventbus-class" aria-label="Permalink to &quot;eventBus class&quot;">​</a></h2><p><strong>Signature:</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">declare</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">EventBus</span></span></code></pre><pre class="shiki light-plus vp-code-light"><code><span class="line"><span style="color:#0000FF;">declare</span><span style="color:#000000;"> </span><span style="color:#0000FF;">class</span><span style="color:#000000;"> </span><span style="color:#267F99;">EventBus</span></span></code></pre></div><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><table><thead><tr><th>Constructor</th><th>Modifiers</th><th>Description</th></tr></thead><tbody><tr><td><a href="./robinson.eventbus._constructor_.html">(constructor)()</a></td><td></td><td>Constructs a new instance of the <code>EventBus</code> class</td></tr></tbody></table><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><table><thead><tr><th>Method</th><th>Modifiers</th><th>Description</th></tr></thead><tbody><tr><td><a href="./robinson.eventbus.clear.html">clear(eventName)</a></td><td></td><td>clear 函数从 eventObj 对象中删除事件。</td></tr><tr><td><a href="./robinson.eventbus.emit.html">emit(eventName, Args)</a></td><td></td><td>“emit”函数触发与特定事件名称关联的所有事件处理程序，并将任何参数传递给它们。</td></tr><tr><td><a href="./robinson.eventbus.off.html">off(eventName, fn)</a></td><td></td><td></td></tr><tr><td><a href="./robinson.eventbus.on.html">on(eventName, eventFn)</a></td><td></td><td>函数“on”将事件侦听器添加到事件对象，将事件函数存储在指定的事件名称下。</td></tr></tbody></table>',8),r=[n];function c(d,l,i,h,p,u){return e(),s("div",null,r)}const m=t(o,[["render",c]]);export{v as __pageData,m as default};
