import{_ as s,o as a,c as n,Q as o}from"./chunks/framework.a7175731.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"etc/doc/robinson.cache.md","filePath":"etc/doc/robinson.cache.md"}'),l={name:"etc/doc/robinson.cache.md"},p=o(`<p><a href="./">Home</a> &gt; <a href="./robinson.html">robinson</a> &gt; <a href="./robinson.cache.html">cache</a></p><h2 id="cache-variable" tabindex="-1">cache variable <a class="header-anchor" href="#cache-variable" aria-label="Permalink to &quot;cache variable&quot;">​</a></h2><p>createCache 函数创建一个缓存对象，该对象可以使用指定的存储机制和编码/解码函数来存储和检索数据。</p><p><strong>Signature:</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">createCache</span><span style="color:#E1E4E8;">: (</span><span style="color:#FFAB70;">storage</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">any</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">parmas</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ParamsInter</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;__#9036@#storage&quot;</span><span style="color:#E1E4E8;">: any;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;__#9036@#encode&quot;</span><span style="color:#E1E4E8;">: Function;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;__#9036@#decode&quot;</span><span style="color:#E1E4E8;">: Function;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">setCache</span><span style="color:#E1E4E8;">(key: string, value: any, expire: number): </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">getCache</span><span style="color:#E1E4E8;">(encodeKey: string): any;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">removeCache</span><span style="color:#E1E4E8;">(key: string): </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">has</span><span style="color:#E1E4E8;">(key: string): boolean;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">length</span><span style="color:#E1E4E8;">(): any;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">clear</span><span style="color:#E1E4E8;">(): </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki light-plus vp-code-light"><code><span class="line"><span style="color:#000000;">createCache: (</span><span style="color:#001080;">storage</span><span style="color:#000000;">: </span><span style="color:#267F99;">any</span><span style="color:#000000;">, </span><span style="color:#001080;">parmas</span><span style="color:#000000;">?: </span><span style="color:#267F99;">ParamsInter</span><span style="color:#000000;">) </span><span style="color:#0000FF;">=&gt;</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#A31515;">&quot;__#9036@#storage&quot;</span><span style="color:#000000;">: </span><span style="color:#001080;">any</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#A31515;">&quot;__#9036@#encode&quot;</span><span style="color:#000000;">: </span><span style="color:#001080;">Function</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#A31515;">&quot;__#9036@#decode&quot;</span><span style="color:#000000;">: </span><span style="color:#001080;">Function</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#795E26;">setCache</span><span style="color:#000000;">(</span><span style="color:#001080;">key</span><span style="color:#000000;">: </span><span style="color:#001080;">string</span><span style="color:#000000;">, </span><span style="color:#001080;">value</span><span style="color:#000000;">: </span><span style="color:#001080;">any</span><span style="color:#000000;">, </span><span style="color:#001080;">expire</span><span style="color:#000000;">: </span><span style="color:#001080;">number</span><span style="color:#000000;">): </span><span style="color:#0000FF;">void</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#795E26;">getCache</span><span style="color:#000000;">(</span><span style="color:#001080;">encodeKey</span><span style="color:#000000;">: </span><span style="color:#001080;">string</span><span style="color:#000000;">): </span><span style="color:#001080;">any</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#795E26;">removeCache</span><span style="color:#000000;">(</span><span style="color:#001080;">key</span><span style="color:#000000;">: </span><span style="color:#001080;">string</span><span style="color:#000000;">): </span><span style="color:#0000FF;">void</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#795E26;">has</span><span style="color:#000000;">(</span><span style="color:#001080;">key</span><span style="color:#000000;">: </span><span style="color:#001080;">string</span><span style="color:#000000;">): </span><span style="color:#001080;">boolean</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#795E26;">length</span><span style="color:#000000;">(): </span><span style="color:#001080;">any</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#795E26;">clear</span><span style="color:#000000;">(): </span><span style="color:#0000FF;">void</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">}</span></span></code></pre></div>`,5),e=[p];function c(t,r,y,E,i,d){return a(),n("div",null,e)}const _=s(l,[["render",c]]);export{F as __pageData,_ as default};
