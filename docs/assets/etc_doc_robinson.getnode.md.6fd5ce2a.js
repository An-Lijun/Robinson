import{_ as s,o as a,c as e,Q as o}from"./chunks/framework.80c893c1.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"etc/doc/robinson.getnode.md","filePath":"etc/doc/robinson.getnode.md"}'),n={name:"etc/doc/robinson.getnode.md"},t=o('<p><a href="./">Home</a> &gt; <a href="./robinson.html">robinson</a> &gt; <a href="./robinson.getnode.html">getNode</a></p><h2 id="getnode-function" tabindex="-1">getNode() function <a class="header-anchor" href="#getnode-function" aria-label="Permalink to &quot;getNode() function&quot;">​</a></h2><p>函数 getNode 将 DOM 元素名称作为输入，如果找到则返回相应的元素，否则返回 null。</p><p><strong>Signature:</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">declare</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getNode</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">domName</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Element</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki light-plus vp-code-light"><code><span class="line"><span style="color:#0000FF;">declare</span><span style="color:#000000;"> </span><span style="color:#0000FF;">function</span><span style="color:#000000;"> </span><span style="color:#795E26;">getNode</span><span style="color:#000000;">(</span><span style="color:#001080;">domName</span><span style="color:#000000;">: </span><span style="color:#267F99;">string</span><span style="color:#000000;">): </span><span style="color:#267F99;">Element</span><span style="color:#000000;"> | </span><span style="color:#267F99;">null</span><span style="color:#000000;">;</span></span></code></pre></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>domName</td><td>string</td><td><code>domName</code> 参数是一个字符串，表示您要选择的 DOM 元素的名称。</td></tr></tbody></table><p><strong>Returns:</strong></p><p>Element | null</p><p>Element 对象或 null。</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-JavaScript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">getNode</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;#id&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;">document.</span><span style="color:#B392F0;">querySelector</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;#id&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki light-plus vp-code-light"><code><span class="line"><span style="color:#000000;">   </span><span style="color:#795E26;">getNode</span><span style="color:#000000;">(</span><span style="color:#A31515;">&#39;#id&#39;</span><span style="color:#000000;">) ===</span><span style="color:#001080;">document</span><span style="color:#000000;">.</span><span style="color:#795E26;">querySelector</span><span style="color:#000000;">(</span><span style="color:#A31515;">&#39;#id&#39;</span><span style="color:#000000;">);</span></span></code></pre></div>',12),l=[t];function p(r,c,d,i,y,E){return a(),e("div",null,l)}const g=s(n,[["render",p]]);export{m as __pageData,g as default};
