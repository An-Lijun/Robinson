import{_ as s,o as a,c as n,Q as o}from"./chunks/framework.a333c6fb.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"etc/doc/robinson.hastypein.md","filePath":"etc/doc/robinson.hastypein.md","lastUpdated":1737297940000}'),p={name:"etc/doc/robinson.hastypein.md"},l=o(`<p><a href="./">Home</a> &gt; <a href="./robinson.html">robinson</a> &gt; <a href="./robinson.hastypein.html">hasTypeIn</a></p><h2 id="hastypein-function" tabindex="-1">hasTypeIn() function <a class="header-anchor" href="#hastypein-function" aria-label="Permalink to &quot;hasTypeIn() function&quot;">​</a></h2><blockquote><p>This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.</p></blockquote><p>该函数检查给定值的类型是否存在于给定类型数组中。</p><p><strong>Signature:</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">declare</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">hasTypeIn</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">value</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">any</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">types</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Array</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">&gt;)</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki light-plus vp-code-light"><code><span class="line"><span style="color:#0000FF;">declare</span><span style="color:#000000;"> </span><span style="color:#0000FF;">function</span><span style="color:#000000;"> </span><span style="color:#795E26;">hasTypeIn</span><span style="color:#000000;">(</span><span style="color:#001080;">value</span><span style="color:#000000;">: </span><span style="color:#267F99;">any</span><span style="color:#000000;">, </span><span style="color:#001080;">types</span><span style="color:#000000;">: </span><span style="color:#267F99;">Array</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">string</span><span style="color:#000000;">&gt;): </span><span style="color:#267F99;">boolean</span><span style="color:#000000;">;</span></span></code></pre></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>value</td><td>any</td><td>“value”参数是您要检查其类型的值。它可以是任何类型，例如数字、字符串、对象等。</td></tr><tr><td>types</td><td>Array&lt;string&gt;</td><td>表示要检查的类型的字符串数组。</td></tr></tbody></table><p><strong>Returns:</strong></p><p>boolean</p><p>{boolean} 一个布尔值。</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-JavaScript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> a </span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;123&quot;</span><span style="color:#E1E4E8;">; </span><span style="color:#B392F0;">isTypeIn</span><span style="color:#E1E4E8;">(a,[</span><span style="color:#9ECBFF;">&#39;number&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;array&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;string&#39;</span><span style="color:#E1E4E8;">]) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{}; </span><span style="color:#B392F0;">isTypeIn</span><span style="color:#E1E4E8;">(a,[</span><span style="color:#9ECBFF;">&#39;number&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;array&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;string&#39;</span><span style="color:#E1E4E8;">]) </span><span style="color:#6A737D;">// false</span></span></code></pre><pre class="shiki light-plus vp-code-light"><code><span class="line"><span style="color:#000000;">    </span><span style="color:#0000FF;">let</span><span style="color:#000000;"> </span><span style="color:#001080;">a</span><span style="color:#000000;"> =</span><span style="color:#A31515;">&quot;123&quot;</span><span style="color:#000000;">; </span><span style="color:#795E26;">isTypeIn</span><span style="color:#000000;">(</span><span style="color:#001080;">a</span><span style="color:#000000;">,[</span><span style="color:#A31515;">&#39;number&#39;</span><span style="color:#000000;">,</span><span style="color:#A31515;">&#39;array&#39;</span><span style="color:#000000;">,</span><span style="color:#A31515;">&#39;string&#39;</span><span style="color:#000000;">]) </span><span style="color:#008000;">// true</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#0000FF;">let</span><span style="color:#000000;"> </span><span style="color:#001080;">a</span><span style="color:#000000;"> ={}; </span><span style="color:#795E26;">isTypeIn</span><span style="color:#000000;">(</span><span style="color:#001080;">a</span><span style="color:#000000;">,[</span><span style="color:#A31515;">&#39;number&#39;</span><span style="color:#000000;">,</span><span style="color:#A31515;">&#39;array&#39;</span><span style="color:#000000;">,</span><span style="color:#A31515;">&#39;string&#39;</span><span style="color:#000000;">]) </span><span style="color:#008000;">// false</span></span></code></pre></div>`,13),e=[l];function t(r,c,y,i,E,d){return a(),n("div",null,e)}const u=s(p,[["render",t]]);export{F as __pageData,u as default};
