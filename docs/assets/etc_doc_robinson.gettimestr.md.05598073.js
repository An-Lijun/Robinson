import{_ as s,o as a,c as n,Q as t}from"./chunks/framework.80c893c1.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"etc/doc/robinson.gettimestr.md","filePath":"etc/doc/robinson.gettimestr.md"}'),o={name:"etc/doc/robinson.gettimestr.md"},p=t(`<p><a href="./">Home</a> &gt; <a href="./robinson.html">robinson</a> &gt; <a href="./robinson.gettimestr.html">getTimeStr</a></p><h2 id="gettimestr-function" tabindex="-1">getTimeStr() function <a class="header-anchor" href="#gettimestr-function" aria-label="Permalink to &quot;getTimeStr() function&quot;">​</a></h2><p>函数“getTimeStr”接受一个字符串和一个数字作为参数，并返回一个重复输入字符串指定次数的新字符串。</p><p><strong>Signature:</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">declare</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getTimeStr</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">str</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">time</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">number</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki light-plus vp-code-light"><code><span class="line"><span style="color:#0000FF;">declare</span><span style="color:#000000;"> </span><span style="color:#0000FF;">function</span><span style="color:#000000;"> </span><span style="color:#795E26;">getTimeStr</span><span style="color:#000000;">(</span><span style="color:#001080;">str</span><span style="color:#000000;">: </span><span style="color:#267F99;">string</span><span style="color:#000000;">, </span><span style="color:#001080;">time</span><span style="color:#000000;">: </span><span style="color:#267F99;">number</span><span style="color:#000000;">): </span><span style="color:#267F99;">string</span><span style="color:#000000;">;</span></span></code></pre></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>str</td><td>string</td><td><code>str</code> 参数是一个字符串，表示需要重复的文本。</td></tr><tr><td>time</td><td>number</td><td>“time”参数是一个数字，表示“str”参数应重复的次数。</td></tr></tbody></table><p><strong>Returns:</strong></p><p>string</p><p>一个字符串。</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-JavaScript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> str </span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;123&#39;</span><span style="color:#E1E4E8;">; </span><span style="color:#B392F0;">getTimeStr</span><span style="color:#E1E4E8;">(str,</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">=&gt;</span><span style="color:#9ECBFF;">&#39;&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> str </span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;123&#39;</span><span style="color:#E1E4E8;">; </span><span style="color:#B392F0;">getTimeStr</span><span style="color:#E1E4E8;">(str,</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">=&gt;</span><span style="color:#9ECBFF;">&#39;123&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> str </span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;123&#39;</span><span style="color:#E1E4E8;">; </span><span style="color:#B392F0;">getTimeStr</span><span style="color:#E1E4E8;">(str,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">=&gt;</span><span style="color:#9ECBFF;">&#39;123123&#39;</span></span></code></pre><pre class="shiki light-plus vp-code-light"><code><span class="line"><span style="color:#000000;">  </span><span style="color:#0000FF;">let</span><span style="color:#000000;"> </span><span style="color:#001080;">str</span><span style="color:#000000;"> =</span><span style="color:#A31515;">&#39;123&#39;</span><span style="color:#000000;">; </span><span style="color:#795E26;">getTimeStr</span><span style="color:#000000;">(</span><span style="color:#001080;">str</span><span style="color:#000000;">,</span><span style="color:#098658;">0</span><span style="color:#000000;">)</span><span style="color:#0000FF;">=&gt;</span><span style="color:#A31515;">&#39;&#39;</span></span>
<span class="line"><span style="color:#000000;">  </span><span style="color:#0000FF;">let</span><span style="color:#000000;"> </span><span style="color:#001080;">str</span><span style="color:#000000;"> =</span><span style="color:#A31515;">&#39;123&#39;</span><span style="color:#000000;">; </span><span style="color:#795E26;">getTimeStr</span><span style="color:#000000;">(</span><span style="color:#001080;">str</span><span style="color:#000000;">,</span><span style="color:#098658;">1</span><span style="color:#000000;">)</span><span style="color:#0000FF;">=&gt;</span><span style="color:#A31515;">&#39;123&#39;</span></span>
<span class="line"><span style="color:#000000;">  </span><span style="color:#0000FF;">let</span><span style="color:#000000;"> </span><span style="color:#001080;">str</span><span style="color:#000000;"> =</span><span style="color:#A31515;">&#39;123&#39;</span><span style="color:#000000;">; </span><span style="color:#795E26;">getTimeStr</span><span style="color:#000000;">(</span><span style="color:#001080;">str</span><span style="color:#000000;">,</span><span style="color:#098658;">2</span><span style="color:#000000;">)</span><span style="color:#0000FF;">=&gt;</span><span style="color:#A31515;">&#39;123123&#39;</span></span></code></pre></div>`,12),l=[p];function e(r,c,y,i,E,d){return a(),n("div",null,l)}const g=s(o,[["render",e]]);export{m as __pageData,g as default};
