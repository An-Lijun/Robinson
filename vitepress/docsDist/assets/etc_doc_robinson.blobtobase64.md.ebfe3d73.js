import{_ as s,o,c as a,Q as e}from"./chunks/framework.a333c6fb.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"etc/doc/robinson.blobtobase64.md","filePath":"etc/doc/robinson.blobtobase64.md","lastUpdated":1737297940000}'),t={name:"etc/doc/robinson.blobtobase64.md"},n=e('<p><a href="./">Home</a> &gt; <a href="./robinson.html">robinson</a> &gt; <a href="./robinson.blobtobase64.html">blobToBase64</a></p><h2 id="blobtobase64-function" tabindex="-1">blobToBase64() function <a class="header-anchor" href="#blobtobase64-function" aria-label="Permalink to &quot;blobToBase64() function&quot;">​</a></h2><blockquote><p>This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.</p></blockquote><p>将Blob对象转换为Base64编码的字符串</p><p><strong>Signature:</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">declare</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">blobToBase64</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">blob</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BlobPart</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">suffix</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Promise</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">unknown</span><span style="color:#E1E4E8;">&gt;;</span></span></code></pre><pre class="shiki light-plus vp-code-light"><code><span class="line"><span style="color:#0000FF;">declare</span><span style="color:#000000;"> </span><span style="color:#0000FF;">function</span><span style="color:#000000;"> </span><span style="color:#795E26;">blobToBase64</span><span style="color:#000000;">(</span><span style="color:#001080;">blob</span><span style="color:#000000;">: </span><span style="color:#267F99;">BlobPart</span><span style="color:#000000;">, </span><span style="color:#001080;">suffix</span><span style="color:#000000;">?: </span><span style="color:#267F99;">string</span><span style="color:#000000;">): </span><span style="color:#267F99;">Promise</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">unknown</span><span style="color:#000000;">&gt;;</span></span></code></pre></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>blob</td><td>BlobPart</td><td>Blob对象</td></tr><tr><td>suffix</td><td>string</td><td><em>(Optional)</em> 文件后缀，默认为&#39;png&#39;</td></tr></tbody></table><p><strong>Returns:</strong></p><p>Promise&lt;unknown&gt;</p><p>Promise对象，解析为Base64编码的字符串</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><p>blobToBase64(new Blob([&#39;Hello, world!&#39;], { type: &#39;text/plain&#39; })) .then(base64 =&gt; console.log(base64));</p>',13),l=[n];function p(r,c,i,b,d,y){return o(),a("div",null,l)}const u=s(t,[["render",p]]);export{E as __pageData,u as default};
