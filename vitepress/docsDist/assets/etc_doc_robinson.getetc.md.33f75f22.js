import{_ as s,o as a,c as n,Q as t}from"./chunks/framework.a333c6fb.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"etc/doc/robinson.getetc.md","filePath":"etc/doc/robinson.getetc.md","lastUpdated":1737297940000}'),o={name:"etc/doc/robinson.getetc.md"},e=t(`<p><a href="./">Home</a> &gt; <a href="./robinson.html">robinson</a> &gt; <a href="./robinson.getetc.html">getEtc</a></p><h2 id="getetc-function" tabindex="-1">getEtc() function <a class="header-anchor" href="#getetc-function" aria-label="Permalink to &quot;getEtc() function&quot;">​</a></h2><blockquote><p>This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.</p></blockquote><p>函数“getEtc”接受一个字符串值并返回指定长度的子字符串，并在末尾附加一个可选的“etcStr”。</p><p><strong>Signature:</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">declare</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getEtc</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">value</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">len</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">number</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">etcStr</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki light-plus vp-code-light"><code><span class="line"><span style="color:#0000FF;">declare</span><span style="color:#000000;"> </span><span style="color:#0000FF;">function</span><span style="color:#000000;"> </span><span style="color:#795E26;">getEtc</span><span style="color:#000000;">(</span><span style="color:#001080;">value</span><span style="color:#000000;">: </span><span style="color:#267F99;">string</span><span style="color:#000000;">, </span><span style="color:#001080;">len</span><span style="color:#000000;">: </span><span style="color:#267F99;">number</span><span style="color:#000000;">, </span><span style="color:#001080;">etcStr</span><span style="color:#000000;">?: </span><span style="color:#267F99;">string</span><span style="color:#000000;">): </span><span style="color:#267F99;">string</span><span style="color:#000000;">;</span></span></code></pre></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>value</td><td>string</td><td>value 参数是一个字符串，表示需要截断的输入值。</td></tr><tr><td>len</td><td>number</td><td>“len”参数是要从“value”参数中提取的字符串的长度。</td></tr><tr><td>etcStr</td><td>string</td><td><em>(Optional)</em> <code>etcStr</code> 参数是一个字符串，表示如果长度超过指定的 <code>len</code> 参数，则要在切片字符串末尾附加的字符。默认情况下，它设置为“...”。</td></tr></tbody></table><p><strong>Returns:</strong></p><p>string</p><p>{string} - 一个字符串。</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-JavaScript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> str </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;123456&#39;</span><span style="color:#E1E4E8;">; </span><span style="color:#B392F0;">getEtc</span><span style="color:#E1E4E8;">(str, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// &#39;123...&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> str </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;123456&#39;</span><span style="color:#E1E4E8;">; </span><span style="color:#B392F0;">getEtc</span><span style="color:#E1E4E8;">(str, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;etc&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// &#39;123etc&#39;</span></span></code></pre><pre class="shiki light-plus vp-code-light"><code><span class="line"><span style="color:#000000;"> </span><span style="color:#0000FF;">let</span><span style="color:#000000;"> </span><span style="color:#001080;">str</span><span style="color:#000000;"> = </span><span style="color:#A31515;">&#39;123456&#39;</span><span style="color:#000000;">; </span><span style="color:#795E26;">getEtc</span><span style="color:#000000;">(</span><span style="color:#001080;">str</span><span style="color:#000000;">, </span><span style="color:#098658;">3</span><span style="color:#000000;">) </span><span style="color:#008000;">// &#39;123...&#39;</span></span>
<span class="line"><span style="color:#000000;"> </span><span style="color:#0000FF;">let</span><span style="color:#000000;"> </span><span style="color:#001080;">str</span><span style="color:#000000;"> = </span><span style="color:#A31515;">&#39;123456&#39;</span><span style="color:#000000;">; </span><span style="color:#795E26;">getEtc</span><span style="color:#000000;">(</span><span style="color:#001080;">str</span><span style="color:#000000;">, </span><span style="color:#098658;">3</span><span style="color:#000000;">, </span><span style="color:#A31515;">&#39;etc&#39;</span><span style="color:#000000;">) </span><span style="color:#008000;">// &#39;123etc&#39;</span></span></code></pre></div>`,13),l=[e];function p(r,c,y,i,E,d){return a(),n("div",null,l)}const g=s(o,[["render",p]]);export{F as __pageData,g as default};
