import{_ as o,o as a,c as t,Q as s}from"./chunks/framework.a333c6fb.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"etc/doc/robinson.stoppropagation.md","filePath":"etc/doc/robinson.stoppropagation.md"}'),n={name:"etc/doc/robinson.stoppropagation.md"},e=s('<p><a href="./">Home</a> &gt; <a href="./robinson.html">robinson</a> &gt; <a href="./robinson.stoppropagation.html">stopPropagation</a></p><h2 id="stoppropagation-function" tabindex="-1">stopPropagation() function <a class="header-anchor" href="#stoppropagation-function" aria-label="Permalink to &quot;stopPropagation() function&quot;">​</a></h2><blockquote><p>This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.</p></blockquote><p>函数 stopPropagation 阻止事件在事件链中向上冒泡。</p><p><strong>Signature:</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">declare</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">stopPropagation</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">event</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Event</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">void</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki light-plus vp-code-light"><code><span class="line"><span style="color:#0000FF;">declare</span><span style="color:#000000;"> </span><span style="color:#0000FF;">function</span><span style="color:#000000;"> </span><span style="color:#795E26;">stopPropagation</span><span style="color:#000000;">(</span><span style="color:#001080;">event</span><span style="color:#000000;">: </span><span style="color:#267F99;">Event</span><span style="color:#000000;">): </span><span style="color:#267F99;">void</span><span style="color:#000000;">;</span></span></code></pre></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>event</td><td>Event</td><td>事件参数是一个表示发生的事件的对象。它包含有关事件的信息，例如事件类型、目标元素以及与事件关联的任何其他数据。在这种情况下，事件参数的类型为Event，它是一个通用事件对象，可以</td></tr></tbody></table><p><strong>Returns:</strong></p><p>void</p>',10),p=[e];function r(l,c,i,d,h,y){return a(),t("div",null,p)}const _=o(n,[["render",r]]);export{E as __pageData,_ as default};
