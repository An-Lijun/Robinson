import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.a333c6fb.js";const F=JSON.parse('{"title":"集成Ts","description":"","frontmatter":{},"headers":[],"relativePath":"etc/rollup/src/withTs.md","filePath":"etc/rollup/src/withTs.md","lastUpdated":1738049586000}'),p={name:"etc/rollup/src/withTs.md"},o=l(`<h1 id="集成ts" tabindex="-1">集成Ts <a class="header-anchor" href="#集成ts" aria-label="Permalink to &quot;集成Ts&quot;">​</a></h1><ol><li>安装依赖</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">npm install rollup @rollup/plugin-typescript typescript tslib -D</span></span></code></pre><pre class="shiki light-plus vp-code-light"><code><span class="line"><span style="color:#000000;">npm install rollup @rollup/plugin-typescript typescript tslib -D</span></span></code></pre></div><ul><li><strong><code>rollup</code></strong>：Rollup 的核心库。</li><li><strong><code>@rollup/plugin-typescript</code></strong>：Rollup 的 TypeScript 插件，用于处理 TypeScript 文件。</li><li><strong><code>typescript</code></strong>：TypeScript 编译器。</li><li><strong><code>tslib</code></strong>：TypeScript 运行时库，用于支持一些 TypeScript 特性。</li></ul><ol start="2"><li>配置rollup</li></ol><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// www.javascriptcn.com code example</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> typescript </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@rollup/plugin-typescript&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  input: </span><span style="color:#9ECBFF;">&#39;src/main.ts&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 入口文件</span></span>
<span class="line"><span style="color:#E1E4E8;">  output: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    file: </span><span style="color:#9ECBFF;">&#39;dist/bundle.js&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 输出文件</span></span>
<span class="line"><span style="color:#E1E4E8;">    format: </span><span style="color:#9ECBFF;">&#39;cjs&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 输出格式</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  plugins: [</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">typescript</span><span style="color:#E1E4E8;">(), </span><span style="color:#6A737D;">// 使用 TypeScript 插件</span></span>
<span class="line"><span style="color:#E1E4E8;">  ],</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki light-plus vp-code-light"><code><span class="line"><span style="color:#008000;">// www.javascriptcn.com code example</span></span>
<span class="line"><span style="color:#AF00DB;">import</span><span style="color:#000000;"> </span><span style="color:#001080;">typescript</span><span style="color:#000000;"> </span><span style="color:#AF00DB;">from</span><span style="color:#000000;"> </span><span style="color:#A31515;">&#39;@rollup/plugin-typescript&#39;</span><span style="color:#000000;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AF00DB;">export</span><span style="color:#000000;"> </span><span style="color:#AF00DB;">default</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#000000;">  </span><span style="color:#001080;">input:</span><span style="color:#000000;"> </span><span style="color:#A31515;">&#39;src/main.ts&#39;</span><span style="color:#000000;">, </span><span style="color:#008000;">// 入口文件</span></span>
<span class="line"><span style="color:#000000;">  </span><span style="color:#001080;">output:</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#001080;">file:</span><span style="color:#000000;"> </span><span style="color:#A31515;">&#39;dist/bundle.js&#39;</span><span style="color:#000000;">, </span><span style="color:#008000;">// 输出文件</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#001080;">format:</span><span style="color:#000000;"> </span><span style="color:#A31515;">&#39;cjs&#39;</span><span style="color:#000000;">, </span><span style="color:#008000;">// 输出格式</span></span>
<span class="line"><span style="color:#000000;">  },</span></span>
<span class="line"><span style="color:#000000;">  </span><span style="color:#001080;">plugins:</span><span style="color:#000000;"> [</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#795E26;">typescript</span><span style="color:#000000;">(), </span><span style="color:#008000;">// 使用 TypeScript 插件</span></span>
<span class="line"><span style="color:#000000;">  ],</span></span>
<span class="line"><span style="color:#000000;">};</span></span></code></pre></div><ol start="3"><li>配置 tsconfig.json 在项目根目录下创建 <code>tsconfig.json</code> 文件，配置 TypeScript 编译选项：</li></ol><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;compilerOptions&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;target&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;es5&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;module&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;esnext&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;moduleResolution&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;node&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;strict&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;esModuleInterop&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;skipLibCheck&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;forceConsistentCasingInFileNames&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;outDir&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;dist&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;declaration&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;include&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;src/**/*&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki light-plus vp-code-light"><code><span class="line"><span style="color:#000000;">{</span></span>
<span class="line"><span style="color:#000000;">  </span><span style="color:#0451A5;">&quot;compilerOptions&quot;</span><span style="color:#000000;">: {</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#0451A5;">&quot;target&quot;</span><span style="color:#000000;">: </span><span style="color:#A31515;">&quot;es5&quot;</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#0451A5;">&quot;module&quot;</span><span style="color:#000000;">: </span><span style="color:#A31515;">&quot;esnext&quot;</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#0451A5;">&quot;moduleResolution&quot;</span><span style="color:#000000;">: </span><span style="color:#A31515;">&quot;node&quot;</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#0451A5;">&quot;strict&quot;</span><span style="color:#000000;">: </span><span style="color:#0000FF;">true</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#0451A5;">&quot;esModuleInterop&quot;</span><span style="color:#000000;">: </span><span style="color:#0000FF;">true</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#0451A5;">&quot;skipLibCheck&quot;</span><span style="color:#000000;">: </span><span style="color:#0000FF;">true</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#0451A5;">&quot;forceConsistentCasingInFileNames&quot;</span><span style="color:#000000;">: </span><span style="color:#0000FF;">true</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#0451A5;">&quot;outDir&quot;</span><span style="color:#000000;">: </span><span style="color:#A31515;">&quot;dist&quot;</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#0451A5;">&quot;declaration&quot;</span><span style="color:#000000;">: </span><span style="color:#0000FF;">true</span></span>
<span class="line"><span style="color:#000000;">  },</span></span>
<span class="line"><span style="color:#000000;">  </span><span style="color:#0451A5;">&quot;include&quot;</span><span style="color:#000000;">: [</span><span style="color:#A31515;">&quot;src/**/*&quot;</span><span style="color:#000000;">]</span></span>
<span class="line"><span style="color:#000000;">}</span></span></code></pre></div><ul><li><p><strong><code>tsconfig.json</code></strong>：TypeScript 的配置文件，用于指定编译选项。</p><ul><li><strong><code>target</code></strong>：指定编译后的 JavaScript 版本。</li><li><strong><code>module</code></strong>：指定模块系统。</li><li><strong><code>strict</code></strong>：启用所有严格类型检查选项。</li><li><strong><code>outDir</code></strong>：指定输出目录。</li><li><strong><code>declaration</code></strong>：生成 <code>.d.ts</code> 类型声明文件。</li></ul></li></ul>`,9),t=[o];function e(c,r,i,y,E,u){return n(),a("div",null,t)}const q=s(p,[["render",e]]);export{F as __pageData,q as default};
