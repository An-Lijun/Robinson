import{_ as s,o as a,c as n,Q as p}from"./chunks/framework.a333c6fb.js";const m=JSON.parse('{"title":"手动开发一个插件","description":"","frontmatter":{},"headers":[],"relativePath":"etc/docs/src/dev.md","filePath":"etc/docs/src/dev.md"}'),o={name:"etc/docs/src/dev.md"},l=p(`<h1 id="手动开发一个插件" tabindex="-1">手动开发一个插件 <a class="header-anchor" href="#手动开发一个插件" aria-label="Permalink to &quot;手动开发一个插件&quot;">​</a></h1><div class="language-JavaScript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">options</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        name: </span><span style="color:#9ECBFF;">&#39;replace-plugin&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">transform</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">code</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">id</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (options.target </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> options.replacement) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> code.</span><span style="color:#B392F0;">replace</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RegExp</span><span style="color:#E1E4E8;">(options.target, </span><span style="color:#9ECBFF;">&#39;g&#39;</span><span style="color:#E1E4E8;">), options.replacement);</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki light-plus vp-code-light"><code><span class="line"><span style="color:#AF00DB;">export</span><span style="color:#000000;"> </span><span style="color:#AF00DB;">default</span><span style="color:#000000;"> </span><span style="color:#0000FF;">function</span><span style="color:#000000;"> (</span><span style="color:#001080;">options</span><span style="color:#000000;">) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#AF00DB;">return</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#001080;">name:</span><span style="color:#000000;"> </span><span style="color:#A31515;">&#39;replace-plugin&#39;</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#795E26;">transform</span><span style="color:#000000;"> (</span><span style="color:#001080;">code</span><span style="color:#000000;">, </span><span style="color:#001080;">id</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#000000;">            </span><span style="color:#AF00DB;">if</span><span style="color:#000000;"> (</span><span style="color:#001080;">options</span><span style="color:#000000;">.</span><span style="color:#001080;">target</span><span style="color:#000000;"> &amp;&amp; </span><span style="color:#001080;">options</span><span style="color:#000000;">.</span><span style="color:#001080;">replacement</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#000000;">                </span><span style="color:#AF00DB;">return</span><span style="color:#000000;"> </span><span style="color:#001080;">code</span><span style="color:#000000;">.</span><span style="color:#795E26;">replace</span><span style="color:#000000;">(</span><span style="color:#0000FF;">new</span><span style="color:#000000;"> </span><span style="color:#795E26;">RegExp</span><span style="color:#000000;">(</span><span style="color:#001080;">options</span><span style="color:#000000;">.</span><span style="color:#001080;">target</span><span style="color:#000000;">, </span><span style="color:#A31515;">&#39;g&#39;</span><span style="color:#000000;">), </span><span style="color:#001080;">options</span><span style="color:#000000;">.</span><span style="color:#001080;">replacement</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#000000;">            }</span></span>
<span class="line"><span style="color:#000000;">            </span><span style="color:#AF00DB;">return</span><span style="color:#000000;"> </span><span style="color:#0000FF;">null</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">        }</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">}</span></span></code></pre></div><p>注意如果报错 \`[!] RollupError: Node tried to load your configuration file as CommonJS even though it is likely an ES module. To resolve this, change the extension of your configuration to &quot;.mjs&quot;, set &quot;type&quot;: &quot;module&quot; in your package.json file or pass the &quot;--bundleConfigAsCjs&quot; flag.</p><p>Original error: Cannot use import statement outside a module\`</p><p>可以加package.json 里添加 &quot;type&quot; :&quot;module&quot; 就可以解决</p><p><img src="https://p0-xtjj-private.juejin.cn/tos-cn-i-73owjymdk6/6da6bf5ae96c4fdda971a8d064bb4988~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5a6J5Yip5ZCbX0FuTGlqdW4=:q75.awebp?policy=eyJ2bSI6MywidWlkIjoiMjUwMjk2MDY4NjA0MDI4NiJ9&amp;rk3s=f64ab15b&amp;x-orig-authkey=f32326d3454f2ac7e96d3d06cdbb035152127018&amp;x-orig-expires=1737871278&amp;x-orig-sign=c7IFw104m4OHKO80acfog1U8v3E%3D" alt="image.png"></p>`,6),e=[l];function t(c,r,y,i,E,d){return a(),n("div",null,e)}const F=s(o,[["render",t]]);export{m as __pageData,F as default};
