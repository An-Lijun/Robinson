import{_ as a,o as s,c as p,Q as o}from"./chunks/framework.a333c6fb.js";const y=JSON.parse('{"title":"快速上手","description":"","frontmatter":{},"headers":[],"relativePath":"etc/docs/src/quick.md","filePath":"etc/docs/src/quick.md","lastUpdated":1737297940000}'),e={name:"etc/docs/src/quick.md"},l=o(`<h1 id="快速上手" tabindex="-1">快速上手 <a class="header-anchor" href="#快速上手" aria-label="Permalink to &quot;快速上手&quot;">​</a></h1><h2 id="开发环境与安装" tabindex="-1">开发环境与安装 <a class="header-anchor" href="#开发环境与安装" aria-label="Permalink to &quot;开发环境与安装&quot;">​</a></h2><p>node使用 <strong>v16.14.0</strong><br> rollup 版本 <strong>v4.30.1</strong></p><p>首先全局安装rollup npm install rollup --global 安装完毕后,这里可以在控制台执行rollup命令 注意: 因为没有传入参数，Rollup 会打印出使用说明。这和运行 <code>rollup --help</code>，或者 <code>rollup -h</code> 相同。</p><p><img src="https://p0-xtjj-private.juejin.cn/tos-cn-i-73owjymdk6/b84dd89495234e7c92ea7a7de56526bd~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5a6J5Yip5ZCbX0FuTGlqdW4=:q75.awebp?policy=eyJ2bSI6MywidWlkIjoiMjUwMjk2MDY4NjA0MDI4NiJ9&amp;rk3s=f64ab15b&amp;x-orig-authkey=f32326d3454f2ac7e96d3d06cdbb035152127018&amp;x-orig-expires=1737859432&amp;x-orig-sign=p0OMnMJYRMN4qXIkooht2ffF7nE%3D" alt="image.png"></p><h2 id="rollup基础工程需要的目录结构" tabindex="-1">rollup基础工程需要的目录结构 <a class="header-anchor" href="#rollup基础工程需要的目录结构" aria-label="Permalink to &quot;rollup基础工程需要的目录结构&quot;">​</a></h2><p>注意rollup 支持命令行界面（CLI）操作,但是这样命令会复杂到很难读懂,这里我更推荐使用配置文件式操作,所以这里关于命令的除了必要的都会一笔带过。</p><pre><code>├── dist # 编译结果
├── package.json
└── src # 源码
    └── index.js
└── rollup.config.mjs # rollup配置文件
</code></pre><p>实际代码关系如下</p><p><img src="https://p0-xtjj-private.juejin.cn/tos-cn-i-73owjymdk6/c19ddfbe338049db8858eed453270ada~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5a6J5Yip5ZCbX0FuTGlqdW4=:q75.awebp?policy=eyJ2bSI6MywidWlkIjoiMjUwMjk2MDY4NjA0MDI4NiJ9&amp;rk3s=f64ab15b&amp;x-orig-authkey=f32326d3454f2ac7e96d3d06cdbb035152127018&amp;x-orig-expires=1737859432&amp;x-orig-sign=y9Y7Wa7v%2BMm2PLwK9IJPTVYhhKE%3D" alt="image.png"></p><h2 id="打包" tabindex="-1">打包 <a class="header-anchor" href="#打包" aria-label="Permalink to &quot;打包&quot;">​</a></h2><p>此时我们就已经搭建好了一个简单的rollup工程<br> 使用命令 <strong>rollup -c</strong> 即可对函数进行打包<br> 怎么样是不是很简单 <img src="https://p0-xtjj-private.juejin.cn/tos-cn-i-73owjymdk6/07586ac7e191489ba62f2d933501f58d~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5a6J5Yip5ZCbX0FuTGlqdW4=:q75.awebp?policy=eyJ2bSI6MywidWlkIjoiMjUwMjk2MDY4NjA0MDI4NiJ9&amp;rk3s=f64ab15b&amp;x-orig-authkey=f32326d3454f2ac7e96d3d06cdbb035152127018&amp;x-orig-expires=1737859432&amp;x-orig-sign=sLxYfitt0%2F3T6qpFzMqS2Yr%2BduY%3D" alt="image.png"></p><h2 id="修改打包命令" tabindex="-1">修改打包命令 <a class="header-anchor" href="#修改打包命令" aria-label="Permalink to &quot;修改打包命令&quot;">​</a></h2><p>由于我们习惯了webpack 或者其它构建工具的打包方式,这里也是推荐使用package添加一个单一的构建脚本 如</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">&quot;scripts&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#79B8FF;">&quot;build&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;rollup --config&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki light-plus vp-code-light"><code><span class="line"><span style="color:#000000;">{</span></span>
<span class="line"><span style="color:#000000;">	</span><span style="color:#0451A5;">&quot;scripts&quot;</span><span style="color:#000000;">: {</span></span>
<span class="line"><span style="color:#000000;">		</span><span style="color:#0451A5;">&quot;build&quot;</span><span style="color:#000000;">: </span><span style="color:#A31515;">&quot;rollup --config&quot;</span></span>
<span class="line"><span style="color:#000000;">	}</span></span>
<span class="line"><span style="color:#000000;">}</span></span></code></pre></div><p><img src="https://p0-xtjj-private.juejin.cn/tos-cn-i-73owjymdk6/82be9f7b38ca4c7ca89580bd41a3e41f~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAg5a6J5Yip5ZCbX0FuTGlqdW4=:q75.awebp?policy=eyJ2bSI6MywidWlkIjoiMjUwMjk2MDY4NjA0MDI4NiJ9&amp;rk3s=f64ab15b&amp;x-orig-authkey=f32326d3454f2ac7e96d3d06cdbb035152127018&amp;x-orig-expires=1737859432&amp;x-orig-sign=6jgAR1eY3OaIcSUZd3cbTg%2BZaaY%3D" alt="image.png"> 这样你和你的小伙伴就可以使用 npm run build进行打包了</p>`,16),n=[l];function t(r,c,i,d,u,b){return s(),p("div",null,n)}const j=a(e,[["render",t]]);export{y as __pageData,j as default};
