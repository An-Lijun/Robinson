import{_ as s,o as a,c as n,Q as o}from"./chunks/framework.a333c6fb.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"etc/doc/robinson.asigndata.md","filePath":"etc/doc/robinson.asigndata.md","lastUpdated":1737297940000}'),p={name:"etc/doc/robinson.asigndata.md"},l=o(`<p><a href="./">Home</a> &gt; <a href="./robinson.html">robinson</a> &gt; <a href="./robinson.asigndata.html">asignData</a></p><h2 id="asigndata-function" tabindex="-1">asignData() function <a class="header-anchor" href="#asigndata-function" aria-label="Permalink to &quot;asignData() function&quot;">​</a></h2><blockquote><p>This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.</p></blockquote><p>函数“asignData”将属性从“obj2”复制到“obj1”，并可选择执行附加函数。</p><p><strong>Signature:</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">declare</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">asignData</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">obj1</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DAMNU_ENABLE</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">obj2</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DAMNU_ENABLE</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DAMNU_ENABLE</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki light-plus vp-code-light"><code><span class="line"><span style="color:#0000FF;">declare</span><span style="color:#000000;"> </span><span style="color:#0000FF;">function</span><span style="color:#000000;"> </span><span style="color:#795E26;">asignData</span><span style="color:#000000;">(</span><span style="color:#001080;">obj1</span><span style="color:#000000;">: </span><span style="color:#267F99;">DAMNU_ENABLE</span><span style="color:#000000;">, </span><span style="color:#001080;">obj2</span><span style="color:#000000;">: </span><span style="color:#267F99;">DAMNU_ENABLE</span><span style="color:#000000;">): </span><span style="color:#267F99;">DAMNU_ENABLE</span><span style="color:#000000;">;</span></span></code></pre></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>obj1</td><td>DAMNU_ENABLE</td><td>obj1 是第一个将被分配数据的对象。</td></tr><tr><td>obj2</td><td>DAMNU_ENABLE</td><td>obj2 是一个对象，其中包含将根据匹配键分配给 obj1 的数据。</td></tr></tbody></table><p><strong>Returns:</strong></p><p>DAMNU_ENABLE</p><p>{DAMNU_ENABLE} - 合并后的对象。</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-JavaScript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> o </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  a: </span><span style="color:#79B8FF;">123</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> b </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  a: </span><span style="color:#79B8FF;">456</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  b: </span><span style="color:#79B8FF;">111</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> result </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">asignData</span><span style="color:#E1E4E8;">(o, b);</span></span>
<span class="line"><span style="color:#6A737D;">// result: { a: 456 }</span></span></code></pre><pre class="shiki light-plus vp-code-light"><code><span class="line"><span style="color:#0000FF;">let</span><span style="color:#000000;"> </span><span style="color:#001080;">o</span><span style="color:#000000;"> = {</span></span>
<span class="line"><span style="color:#000000;">  </span><span style="color:#001080;">a:</span><span style="color:#000000;"> </span><span style="color:#098658;">123</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#000000;">};</span></span>
<span class="line"><span style="color:#0000FF;">let</span><span style="color:#000000;"> </span><span style="color:#001080;">b</span><span style="color:#000000;"> = {</span></span>
<span class="line"><span style="color:#000000;">  </span><span style="color:#001080;">a:</span><span style="color:#000000;"> </span><span style="color:#098658;">456</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#000000;">  </span><span style="color:#001080;">b:</span><span style="color:#000000;"> </span><span style="color:#098658;">111</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#000000;">};</span></span>
<span class="line"><span style="color:#0000FF;">let</span><span style="color:#000000;"> </span><span style="color:#001080;">result</span><span style="color:#000000;"> = </span><span style="color:#795E26;">asignData</span><span style="color:#000000;">(</span><span style="color:#001080;">o</span><span style="color:#000000;">, </span><span style="color:#001080;">b</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#008000;">// result: { a: 456 }</span></span></code></pre></div>`,13),e=[l];function t(r,c,i,y,E,d){return a(),n("div",null,e)}const F=s(p,[["render",t]]);export{b as __pageData,F as default};
